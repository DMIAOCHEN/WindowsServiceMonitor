<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="winSrvMonitor" type="WindowsServiceMonitor.Configuration.MonitorConfig, WindowsServiceMonitor"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
    </startup>

  <winSrvMonitor>
    <!-- enable指定是否监控服务在其停止的时候自动启动 -->
    <Server enable="true">
      <!--服务名称-->
      <Name>ICCServer</Name>
      <!--进程名，在无法正常结束服务的时候需要强制杀死进程-->
      <ProcessName>ICCServer</ProcessName>
      <!--enable指定是否自动重启服务-->
      <AutoRestart enable="true">
        <!--每隔几天重启-->
        <Days>0</Days>
        <!--每天几点重启-->
        <Time>17:35:00</Time>
      </AutoRestart>
    </Server>
  </winSrvMonitor>

  <log4net>
    <!--定义输出到文件中-->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <!--定义文件存放位置-->
      <file value=".\Log\"/>
      <appendToFile value="true"/>
      <rollingStyle value="Date"/>
      <datePattern value="&quot;WindowsServerMonitor_Log_&quot;yyyyMMdd&quot;.txt&quot;"/>
      <staticLogFileName value="false"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <layout type="log4net.Layout.PatternLayout">
        <!--
        %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
        %n(newline):换行
        %d(date):输出当前语句运行的时刻
        %r(timestamp):从程序启动到事件发生所经过的毫秒数
        %t(thread):引发日志事件的线程，如果没有线程名就使用线程号
        %p(level):日志的当前优先级别，即DEBUG、INFO、WARN…等
        %c(class):引发日志请求的类的全名
        %M(method):发生日志请求的方法名（只有方法名而已）
        %L(line):引发日志事件的行号
        %F(file):输出语句所在的文件名，只在调试的时候有效
        %exception:异常信息，日志事件中必须存了一个异常对象，如果日志事件不包含没有异常对象，将什么也不输出。异常输出完毕后会跟一个换行。
        %-数字:表示该项的最小长度，如果不够，则用空格填充
        -->
        <conversionPattern value="[时间]%d%n[级别]:%p%n[线程]:%t%n[对象]:%c%n[方法]:%M%n[行号]:%L%n[内容]:%m%n[异常]:%exception%n---------------------------------------------------------------%n"/>
      </layout>
    </appender>
    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <level value="ERROR"/>
        <foreColor value="White"/>
        <backColor value="Red, HighIntensity"/>
      </mapping>
      <mapping>
        <level value="INFO"/>
        <backColor value="Green"/>
      </mapping>
      <mapping>
        <level value="DEBUG"/>
        <backColor value="Yellow"/>
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="[%-5level]%date [T:%t] %m%n"/>
      </layout>
    </appender>
    <root>
      <!--对输出的日志信息做一个过滤，即那些日志信息输出，那些不输出-->
      <!--日志级别由高到底分为：OFF > FATAL > ERROR > WARN > INFO > DEBUG-->
      <!--FATAL:致命错误-->
      <!--ERROR:一般错误-->
      <!--WARN:警告-->
      <!--INFO:一般信息-->
      <!--DEBUG:调试信息-->
      <level value="DEBUG"/>
      <!--文件形式记录日志-->
      <appender-ref ref="RollingFileAppender"/>
      <!--控制台记录日志-->
      <appender-ref ref="ColoredConsoleAppender"/>
    </root>
  </log4net>
</configuration>
